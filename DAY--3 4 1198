#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int maxTrace(const vector<vector<int>>& A, int N) {
    int max_trace = 0;

  
    for (int start_col = 0; start_col < N; ++start_col) {
        int trace = 0;
        for (int i = 0, j = start_col; i < N && j < N; ++i, ++j) {
            trace += A[i][j];
        }
        max_trace = max(max_trace, trace);
    }

    
    for (int start_row = 1; start_row < N; ++start_row) {
        int trace = 0;
        for (int i = start_row, j = 0; i < N && j < N; ++i, ++j) {
            trace += A[i][j];
        }
        max_trace = max(max_trace, trace);
    }

    return max_trace;
}

int main() {
    int T;
    cin >> T;
    while (T--) {
        int N;
        cin >> N;
        vector<vector<int>> A(N, vector<int>(N));

        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < N; ++j) {
                cin >> A[i][j];
            }
        }

        cout << maxTrace(A, N) << endl;
    }

    return 0;
}
